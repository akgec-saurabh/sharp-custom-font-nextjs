import Image from "next/image";
import React from "react";
import sharp from "sharp";
import fs from "fs";
import path from "path";

// Font files can be colocated inside of `pages`

const render = async ({ text, font }: { text: string; font: string }) => {
  const svgText = `    <svg xmlns="http://www.w3.org/2000/svg" width="180" height="80">
  <style>
  @font-face {
    font-family: 'Shree Dev7 4908';
    src: url('/home/saurabh/Documents/github/sharp/public/font/SHREE-DEV7-4908 Regular.ttf');
  }
</style>
<text
  x="10"
  y="50"
  font-family="Shree Dev7 4908"  font-size="32"
  fill="black"
>
  शायरी पेज
</text>
</svg>`;

  console.log(svgText);

  const svgBuffer = Buffer.from(svgText);
  try {
    const pngBuffer = await sharp(svgBuffer).png().toBuffer();
    // Convert PNG buffer to base64 string
    const pngBase64 = pngBuffer.toString("base64");
    // Return the PNG base64 string
    return pngBase64;
  } catch (error) {
    console.error("Error processing SVG:", error);
    return null;
  }
};

const page = async () => {
  const buffer = await render({
    text: "",
    font: "/home/saurabh/Documents/github/sharp/public/font/S07030F2.TTF",
  });

  const getFonts = () => {
    const fontsDir = path.join(process.cwd(), "public/font");
    try {
      const fonts = fs.readdirSync(fontsDir);
      return fonts;
    } catch (error) {
      console.error("Error reading fonts directory:", error);
      return [];
    }
  };

  const allBuffers = await Promise.all(
    getFonts().map(async (font) => {
      console.log(font);
      return await render({ text: "", font: font });
    })
  );

  console.log(buffer);
  const pngDataURL = `data:image/png;base64,${buffer}`;
  // Render the PNG image
  return (
    <div>
      {allBuffers.map((imgBuffer, index) => (
        <Image
          key={index}
          alt=""
          src={`data:image/png;base64,${imgBuffer}`}
          width={180}
          height={80}
        />
      ))}
      <Image src={pngDataURL} alt="SVG to PNG" width={180} height={80} />
    </div>
  );
};

export default page;


const font_familiess = [
  "SHREE-DEV7-0705",
  "SHREE-DEV7-0707",
  "SHREE-DEV7-0708",
  "SHREE-DEV7-0709",
  "SHREE-DEV7-0710",
  "SHREE-DEV7-0711",
  "SHREE-DEV7-0712",
  "SHREE-DEV7-0713",
  "SHREE-DEV7-0715",
  "SHREE-DEV7-0716",
  "SHREE-DEV7-0720",
  "SHREE-DEV7-0721",
  "SHREE-DEV7-0722",
  "SHREE-DEV7-0725",
  "SHREE-DEV7-0728",
  "SHREE-DEV7-0738",
  "SHREE-DEV7-0739",
  "SHREE-DEV7-0740",
  "SHREE-DEV7-0970",
  "SHREE-DEV7-0974",
  "SHREE-DEV7-0975",
  "SHREE-DEV7-0977",
  "SHREE-DEV7-0978",
  "SHREE-DEV7-0980",
  "SHREE-DEV7-0986",
  "SHREE-DEV7-0987",
  "SHREE-DEV7-0988",
  "SHREE-DEV7-0992",
  "SHREE-DEV7-0993",
  "SHREE-DEV7-0994",
  "SHREE-DEV7-0995",
  "SHREE-DEV7-1002",
  "SHREE-DEV7-1003",
  "SHREE-DEV7-1007",
  "SHREE-DEV7-1009",
  "SHREE-DEV7-1010",
  "SHREE-DEV7-1011",
  "SHREE-DEV7-1018",
  "SHREE-DEV7-1025",
  "SHREE-DEV7-1027",
  "SHREE-DEV7-1030",
  "SHREE-DEV7-1031",
  "SHREE-DEV7-1032",
  "SHREE-DEV7-1035",
  "SHREE-DEV7-1059",
  "SHREE-DEV7-1060",
  "SHREE-DEV7-1061",
  "SHREE-DEV7-1063",
  "SHREE-DEV7-1074",
  "SHREE-DEV7-1075",
  "SHREE-DEV7-1076",
  "SHREE-DEV7-1079",
  "SHREE-DEV7-1080",
  "SHREE-DEV7-1081",
  "SHREE-DEV7-1082",
  "SHREE-DEV7-1083",
  "SHREE-DEV7-1088",
  "SHREE-DEV7-1089",
  "SHREE-DEV7-1090",
  "SHREE-DEV7-1091",
  "SHREE-DEV7-1094",
  "SHREE-DEV7-1095",
  "SHREE-DEV7-1200",
  "SHREE-DEV7-1201",
  "SHREE-DEV7-1203",
  "SHREE-DEV7-1206",
  "SHREE-DEV7-1207",
  "SHREE-DEV7-1211",
  "SHREE-DEV7-1212",
  "SHREE-DEV7-1216",
  "SHREE-DEV7-1217",
  "SHREE-DEV7-1218",
  "SHREE-DEV7-1221",
  "SHREE-DEV7-1222",
  "SHREE-DEV7-1223",
  "SHREE-DEV7-1224",
  "SHREE-DEV7-1226",
  "SHREE-DEV7-1228",
  "SHREE-DEV7-1232",
  "SHREE-DEV7-1233",
  "SHREE-DEV7-1234",
  "SHREE-DEV7-1235",
  "SHREE-DEV7-1236",
  "SHREE-DEV7-1237",
  "SHREE-DEV7-1239",
  "SHREE-DEV7-1247",
  "SHREE-DEV7-1251",
  "SHREE-DEV7-1254",
  "SHREE-DEV7-1255",
  "SHREE-DEV7-1256",
  "SHREE-DEV7-1257",
  "SHREE-DEV7-1258",
  "SHREE-DEV7-1259",
  "SHREE-DEV7-1265",
  "SHREE-DEV7-1266",
  "SHREE-DEV7-1271",
  "SHREE-DEV7-1277",
  "SHREE-DEV7-1282",
  "SHREE-DEV7-1283",
  "SHREE-DEV7-2311",
  "SHREE-DEV7-2312",
  "SHREE-DEV7-2315",
  "SHREE-DEV7-2317",
  "SHREE-DEV7-2334",
  "SHREE-DEV7-2335",
  "SHREE-DEV7-2336",
  "SHREE-DEV7-2337",
  "SHREE-DEV7-2338",
  "SHREE-DEV7-2339",
  "SHREE-DEV7-2345",
  "SHREE-DEV7-2347",
  "SHREE-DEV7-2348",
  "SHREE-DEV7-2349",
  "SHREE-DEV7-2350",
  "SHREE-DEV7-2351",
  "SHREE-DEV7-2357",
  "SHREE-DEV7-2361",
  "SHREE-DEV7-2362",
  "SHREE-DEV7-2368",
  "SHREE-DEV7-2371",
  "SHREE-DEV7-2379",
  "SHREE-DEV7-2388",
  "SHREE-DEV7-2389",
  "SHREE-DEV7-2390",
  "SHREE-DEV7-2391",
  "SHREE-DEV7-2396",
  "SHREE-DEV7-2399",
  "SHREE-DEV7-2400",
  "SHREE-DEV7-2402",
  "SHREE-DEV7-2404",
  "SHREE-DEV7-2405",
  "SHREE-DEV7-2406",
  "SHREE-DEV7-2407",
  "SHREE-DEV7-2416",
  "SHREE-DEV7-2417",
  "SHREE-DEV7-2418",
  "SHREE-DEV7-2422",
  "SHREE-DEV7-2425",
  "SHREE-DEV7-2426",
  "SHREE-DEV7-2429",
  "SHREE-DEV7-2431",
  "SHREE-DEV7-2432",
  "SHREE-DEV7-2435",
  "SHREE-DEV7-2436",
  "SHREE-DEV7-2437",
  "SHREE-DEV7-2441",
  "SHREE-DEV7-2442",
  "SHREE-DEV7-2443",
  "SHREE-DEV7-2445",
  "SHREE-DEV7-2447",
  "SHREE-DEV7-2448",
  "SHREE-DEV7-2449",
  "SHREE-DEV7-2450",
  "SHREE-DEV7-2451",
  "SHREE-DEV7-2453",
  "SHREE-DEV7-2456",
];